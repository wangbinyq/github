{"version":3,"names":[],"mappings":"","sources":["Search.js"],"sourcesContent":["/**\r\n * @file\r\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\r\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\r\n *             Github.js is freely distributable.\r\n */\r\n\r\nimport Requestable from './Requestable';\r\nimport debug from 'debug';\r\nconst log = debug('github:search');\r\n\r\n/**\r\n * Wrap the Search API\r\n */\r\nclass Search extends Requestable {\r\n   /**\r\n    * Create a Search\r\n    * @param {Object} defaults - defaults for the search\r\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\r\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\r\n    */\r\n   constructor(defaults, auth, apiBase) {\r\n      super(auth, apiBase);\r\n      this.__defaults = this._getOptionsWithDefaults(defaults);\r\n   }\r\n\r\n   /**\r\n    * Available search options\r\n    * @see https://developer.github.com/v3/search/#parameters\r\n    * @typedef {Object} Search.Params\r\n    * @param {string} q - the query to make\r\n    * @param {string} sort - the sort field, one of `stars`, `forks`, or `updated`.\r\n    *                      Default is [best match](https://developer.github.com/v3/search/#ranking-search-results)\r\n    * @param {string} order - the ordering, either `asc` or `desc`\r\n    */\r\n   /**\r\n    * Perform a search on the GitHub API\r\n    * @private\r\n    * @param {string} path - the scope of the search\r\n    * @param {Search.Params} [withOptions] - additional parameters for the search\r\n    * @param {Requestable.callback} [cb] - will receive the results of the search\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   _search(path, withOptions = {}, cb = undefined) {\r\n      let requestOptions = {};\r\n      Object.keys(this.__defaults).forEach((prop) => {\r\n         requestOptions[prop] = this.__defaults[prop];\r\n      });\r\n      Object.keys(withOptions).forEach((prop) => {\r\n         requestOptions[prop] = withOptions[prop];\r\n      });\r\n\r\n      log(`searching ${path} with options:`, requestOptions);\r\n      return this._requestAllPages(`/search/${path}`, requestOptions, cb);\r\n   }\r\n\r\n   /**\r\n    * Search for repositories\r\n    * @see https://developer.github.com/v3/search/#search-repositories\r\n    * @param {Search.Params} [options] - additional parameters for the search\r\n    * @param {Requestable.callback} [cb] - will receive the results of the search\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   forRepositories(options, cb) {\r\n      return this._search('repositories', options, cb);\r\n   }\r\n\r\n   /**\r\n    * Search for code\r\n    * @see https://developer.github.com/v3/search/#search-code\r\n    * @param {Search.Params} [options] - additional parameters for the search\r\n    * @param {Requestable.callback} [cb] - will receive the results of the search\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   forCode(options, cb) {\r\n      return this._search('code', options, cb);\r\n   }\r\n\r\n   /**\r\n    * Search for issues\r\n    * @see https://developer.github.com/v3/search/#search-issues\r\n    * @param {Search.Params} [options] - additional parameters for the search\r\n    * @param {Requestable.callback} [cb] - will receive the results of the search\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   forIssues(options, cb) {\r\n      return this._search('issues', options, cb);\r\n   }\r\n\r\n   /**\r\n    * Search for users\r\n    * @see https://developer.github.com/v3/search/#search-users\r\n    * @param {Search.Params} [options] - additional parameters for the search\r\n    * @param {Requestable.callback} [cb] - will receive the results of the search\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   forUsers(options, cb) {\r\n      return this._search('users', options, cb);\r\n   }\r\n}\r\n\r\nmodule.exports = Search;\r\n"],"file":"Search.js"}