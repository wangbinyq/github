{"version":3,"names":[],"mappings":"","sources":["Organization.js"],"sourcesContent":["/**\r\n * @file\r\n * @copyright  2013 Michael Aufreiter (Development Seed) and 2016 Yahoo Inc.\r\n * @license    Licensed under {@link https://spdx.org/licenses/BSD-3-Clause-Clear.html BSD-3-Clause-Clear}.\r\n *             Github.js is freely distributable.\r\n */\r\n\r\nimport Requestable from './Requestable';\r\n\r\n/**\r\n * Organization encapsulates the functionality to create repositories in organizations\r\n */\r\nclass Organization extends Requestable {\r\n   /**\r\n    * Create a new Organization\r\n    * @param {string} organization - the name of the organization\r\n    * @param {Requestable.auth} [auth] - information required to authenticate to Github\r\n    * @param {string} [apiBase=https://api.github.com] - the base Github API URL\r\n    */\r\n   constructor(organization, auth, apiBase) {\r\n      super(auth, apiBase);\r\n      this.__name = organization;\r\n   }\r\n\r\n   /**\r\n    * Create a repository in an organization\r\n    * @see https://developer.github.com/v3/repos/#create\r\n    * @param {Object} options - the repository definition\r\n    * @param {Requestable.callback} [cb] - will receive the created repository\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   createRepo(options, cb) {\r\n      return this._request('POST', `/orgs/${this.__name}/repos`, options, cb);\r\n   }\r\n\r\n   /**\r\n    * List the repositories in an organization\r\n    * @see https://developer.github.com/v3/repos/#list-organization-repositories\r\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   getRepos(cb) {\r\n      let requestOptions = this._getOptionsWithDefaults({direction: 'desc'});\r\n\r\n      return this._requestAllPages(`/orgs/${this.__name}/repos`, requestOptions, cb);\r\n   }\r\n\r\n   /**\r\n    * Query if the user is a member or not\r\n    * @param {string} username - the user in question\r\n    * @param {Requestable.callback} [cb] - will receive true if the user is a member\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   isMember(username, cb) {\r\n      return this._request204or404(`/orgs/${this.__name}/members/${username}`, null, cb);\r\n   }\r\n\r\n   /**\r\n    * List the users who are members of the company\r\n    * @see https://developer.github.com/v3/orgs/members/#members-list\r\n    * @param {object} options - filtering options\r\n    * @param {string} [options.filter=all] - can be either `2fa_disabled` or `all`\r\n    * @param {string} [options.role=all] - can be one of: `all`, `admin`, or `member`\r\n    * @param {Requestable.callback} [cb] - will receive the list of users\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   listMembers(options, cb) {\r\n      return this._request('GET', `/orgs/${this.__name}/members`, options, cb);\r\n   }\r\n\r\n   /**\r\n    * List the Teams in the Organization\r\n    * @see https://developer.github.com/v3/orgs/teams/#list-teams\r\n    * @param {Requestable.callback} [cb] - will receive the list of teams\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   getTeams(cb) {\r\n      return this._requestAllPages(`/orgs/${this.__name}/teams`, undefined, cb);\r\n   }\r\n\r\n   /**\r\n    * Create a team\r\n    * @see https://developer.github.com/v3/orgs/teams/#create-team\r\n    * @param {object} options - Team creation parameters\r\n    * @param {string} options.name - The name of the team\r\n    * @param {string} [options.description] - Team description\r\n    * @param {string} [options.repo_names] - Repos to add the team to\r\n    * @param {string} [options.privacy=secret] - The level of privacy the team should have. Can be either one\r\n    * of: `secret`, or `closed`\r\n    * @param {Requestable.callback} [cb] - will receive the created team\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   createTeam(options, cb) {\r\n      return this._request('POST', `/orgs/${this.__name}/teams`, options, cb);\r\n   }\r\n\r\n   /**\r\n    * Get information about all projects\r\n    * @see https://developer.github.com/v3/projects/#list-organization-projects\r\n    * @param {Requestable.callback} [cb] - will receive the list of projects\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   listProjects(cb) {\r\n      return this._requestAllPages(`/orgs/${this.__name}/projects`, {AcceptHeader: 'inertia-preview'}, cb);\r\n   }\r\n\r\n   /**\r\n    * Create a new project\r\n    * @see https://developer.github.com/v3/repos/projects/#create-a-project\r\n    * @param {Object} options - the description of the project\r\n    * @param {Requestable.callback} cb - will receive the newly created project\r\n    * @return {Promise} - the promise for the http request\r\n    */\r\n   createProject(options, cb) {\r\n      options = options || {};\r\n      options.AcceptHeader = 'inertia-preview';\r\n      return this._request('POST', `/orgs/${this.__name}/projects`, options, cb);\r\n   }\r\n}\r\n\r\nmodule.exports = Organization;\r\n"],"file":"Organization.js"}